/* 
 * Drag[en]gine Testing
 *
 * Copyright (C) 2020, Roland Pl√ºss (roland@rptd.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace DETesting

pin Dragengine.LoadSave
pin Dragengine.Scenery
pin Dragengine.Preloading
pin Dragengine.Utils
pin Dragengine.TestSystem


/**
 * Base class for element class behavior tests.
 */
abstract class BaseBehaviorTestCase extends TestCase
	/** Helper class to store the created element aside. */
	protected class TestBehaviorElementClass extends BehaviorElementClass
		public var BaseBehaviorTestCase test
		
		/** Create element class. */
		public func new(BaseBehaviorTestCase test) super("TestBehaviorElement")
			this.test = test
		end
		
		public func void dispose()
			test = null
			super.dispose()
		end
		
		/**
		 * Overrides BehaviorElementClass.createElement() to store element aside
		 */
		protected func Element createElement()
			var Element element = super.createElement()
			test.setElement(element cast BehaviorElement)
			return element
		end
	end
	
	
	
	protected var BehaviorElementClass eclass
	protected var StubElement stub
	protected var BehaviorElement element
	protected var PreloadCounter preloadCounter
	protected var GameWorld gameWorld
	
	
	
	/** Create text. */
	public func new(String id, UnicodeString name) super(id, name)
	end
	
	
	
	/** Add behaviors to element class. */
	protected abstract func void addBehaviors()
	
	/** Set stub properties. */
	protected func void setStubProperties()
	end
	
	/** Element created. */
	protected func void elementCreated()
	end
	
	/** Test behaviors. */
	protected abstract func bool testBehaviors(TestSuite testSuite)
	
	
	
	/** Set element. For internal use only. */
	public func void setElement(BehaviorElement element)
		this.element = element
	end
	
	/** Overrides TestCase.init() */
	public func void init()
		// create game world
		gameWorld = GameWorld.new()
		
		// create element class
		eclass = TestBehaviorElementClass.new(this)
		
		// add behaviors
		addBehaviors()
		
		// start preloading
		preloadCounter = PreloadCounter.new()
		eclass.preloadResources(preloadCounter)
	end
	
	/** Overrides TestCase.run() */
	public func bool run(TestSuite testSuite)
		// if preloading
		if preloadCounter != null
			// if still preloading wait
			if preloadCounter.isNotZero()
				return true
			end
			
			// preloading finished
			preloadCounter = null
			
			// create element stub
			stub = StubElement.new(eclass, UniqueID.new(123))
			setStubProperties()
			
			// create element. assert element has been created and has been added to game world
			stub.createAndAddElement(gameWorld)
			assertNotNull(element)
			assertEquals(element.getGameWorld(), gameWorld)
			
			elementCreated()
		end
		
		// run test
		return testBehaviors(testSuite)
	end
	
	/** Overrides TestCase.tearDown() */
	public func void tearDown()
		// stop preloading
		preloadCounter = null
		
		// dispose of element
		if element != null
			element.safeDispose()
			element = null
		end
		
		// drop stub
		stub = null
		
		// dispose of element class
		if eclass != null
			eclass.dispose()
			eclass = null
		end
		
		// dispose of game world
		if gameWorld != null
			gameWorld.dispose()
			gameWorld = null
		end
	end
end
